geom_bar() +
theme_minimal()
ggplot(df_dates_all, mapping = aes(x = date)) +
geom_bar() +
theme_minimal()+
labs(x = 'Date FDA Session',
title = 'All FDA Sessions',
caption = 'N = 1,017 ') +
geom_vline(mapping=aes(xintercept=date), color="red", linetype = 'dotted')
ggplot(df_dates_all, mapping = aes(x = date)) +
geom_bar() +
theme_minimal()+
labs(x = 'Date FDA Session',
title = 'All FDA Sessions',
caption = 'N = 1,017 ') +
geom_vline(mapping=aes(xintercept=as.Date(c("2007-09-01"))), color="red", linetype = 'dotted')
df_dates <- read_csv('/Users/cblanesg/Desktop/dates_df.csv') %>%
select(id_meeting,date_meeting ) %>%
distinct()
df_dates
ggplot(df_dates, mapping = aes(x = date_meeting)) +
geom_bar() +
theme_minimal()+
labs(x = 'Date FDA Session',
title = 'All FDA Sessions',
caption = 'N = 1,017 ') +
geom_vline(mapping=aes(xintercept=as.Date(c("2007-09-01"))), color="red", linetype = 'dotted')
ggplot(df_dates, mapping = aes(x = date_meeting)) +
geom_bar() +
theme_minimal()+
labs(x = 'Date FDA Session',
title = 'All FDA Sessions',
caption = 'N = 461') +
geom_vline(mapping=aes(xintercept=as.Date(c("2007-09-01"))), color="red", linetype = 'dotted')
ggplot(df_dates, mapping = aes(x = date_meeting)) +
geom_bar() +
theme_minimal()+
labs(x = 'Date FDA Session',
title = 'FDA Voting-Sessions',
caption = 'N = 461') +
geom_vline(mapping=aes(xintercept=as.Date(c("2007-09-01"))), color="red", linetype = 'dotted')
rm(list=ls())
## Output directory
output <- "~/Dropbox/Contribution_project/data/policy-estimations/04-wordfish/"
list.packages <- c("readr",
"tidybayes",
"readxl",
"preText",
"plyr",
"dplyr",
"tidyr",
"stringr",
"xtable",
"ggplot2",
"RcppRoll",
"ggridges",
"rstan",
"shinystan",
"stm",
"quanteda",
"quanteda.textmodels",
"wordcloud",
"austin")
lapply(list.packages,
require,
character.only = TRUE)
##Load  candidate-docs
data_cand_docs <- read_csv("../cblanesg/cam.blanes Dropbox/Camila Blanes/Contributors_project/data/policy-estimations/00-raw/data_all_panel_topics.csv")
data_cand_docs <- data_cand_docs %>% select(-X1)
##Load candidate characteristics
cand_char <- read_csv(file = "../cblanesg/cam.blanes Dropbox/Camila Blanes/Contributors_project/data/policy-estimations/03-g&s/03-summary_statistics/spend_bio_sen.csv")
cand_char <- cand_char %>% select(FEC_ID,
gender_cand,
spendr,
status,
recipient_cfscore,
age_cand,
highest_degree,
type,
exp_state)
data_cand_docs <- left_join(data_cand_docs,
cand_char,
by = "FEC_ID")
data_cand_docs <- data_cand_docs %>%
mutate(date_statement_2 = as.Date(date_statement,
format = "%Y-%m-%d"),
date_statement_3 = as.Date(date_statement,
format = "%m/%d/%y"),
date_statement_4 = as.Date(date_statement,
format = "%d/%m/%y"),
date = if_else(is.na(date_statement_2) == 0,
date_statement_2,
if_else(is.na(date_statement_3) == 0,
date_statement_3,
date_statement_4)),
date_num= as.numeric(as.factor(date)),
female = as.factor(ifelse(gender_cand == "Female",
1,
0)),
republican = as.factor(ifelse(party_cand == "R",
1,
0)),
incumbent = as.factor(ifelse(type == "inc",
1,
0)),
chall_open = as.factor(ifelse(type == "challenger_chall",
1,
0)),
degree_high = as.factor(ifelse(highest_degree == "Masters"|
highest_degree == "Doctorate",
1,
0)),
exp_state = as.numeric(as.character(exp_state)),
age_cand_log = log(age_cand),
spendr_log = log(spendr)
) %>%
filter(date < "2016-11-08")
rm(list=ls())
## Output directory
output <- "~/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Congressional-dataMX/data/02-outcomes/01-policy_positioning/01-text_analysis/1.1-topics_lda/"
list.packages <- c("readr",
"tidybayes",
"readxl",
"preText",
"plyr",
"dplyr",
"tidyr",
"stringr",
"xtable",
"ggplot2",
"RcppRoll",
"ggridges",
"rstan",
"shinystan",
"stm",
"quanteda",
"quanteda.textmodels",
"wordcloud",
"austin",
'readxl',
'topicmodels',
'tidytext')
lapply(list.packages,
require,
character.only = TRUE)
## load topics-speeches
data_topics_docs <- read_excel("/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Congressional-dataMX/data/02-outcomes/01-policy_positioning/01-text_analysis/01-clean_data/topics/topics_speeches.xlsx") %>%
select(id_speech, clean_topic)
## Remove some words
data_topics_docs$clean_topic <- str_remove(string = data_topics_docs$clean_topic, pattern = 'y')
data_topics_docs$clean_topic <- str_remove(string = data_topics_docs$clean_topic, pattern = 'a')
## tokenize data
toks <- tokens(x = data_topics_docs$clean_topic)
ngrams <- tokens_ngrams(toks, n = 1:2)
dfm_ob <- dfm(ngrams)
dfm_trim.temp <- dfm_trim(dfm_ob, docfreq_type = "prop",
min_docfreq = 0.005)
dfm_trim <- dfm_trim.temp[-which(rowMeans(dfm_trim.temp) == 0),]
data_topics_docs <- data_topics_docs[-which(rowMeans(dfm_trim.temp) == 0),]
## Apply lda
ap_lda <- LDA(dfm_ob, k = 10, control = list(seed = 1234))
ap_topics <- tidy(ap_lda, matrix = "beta")
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ap_top_terms %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
scale_y_reordered()
## Remove some words
data_topics_docs$clean_topic <- gsub(string = data_topics_docs$clean_topic, pattern = 'y', replacement = '')
## load topics-speeches
data_topics_docs <- read_excel("/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Congressional-dataMX/data/02-outcomes/01-policy_positioning/01-text_analysis/01-clean_data/topics/topics_speeches.xlsx") %>%
select(id_speech, clean_topic)
## tokenize data
toks <- tokens(x = data_topics_docs$clean_topic)
ngrams <- tokens_ngrams(toks, n = 1:2)
dfm_ob <- dfm(ngrams)
dfm_trim.temp <- dfm_trim(dfm_ob, docfreq_type = "prop",
min_docfreq = 0.005)
dfm_trim <- dfm_trim.temp[-which(rowMeans(dfm_trim.temp) == 0),]
data_topics_docs <- data_topics_docs[-which(rowMeans(dfm_trim.temp) == 0),]
## Apply lda
ap_lda <- LDA(dfm_ob, k = 8, control = list(seed = 1234))
ap_topics <- tidy(ap_lda, matrix = "beta")
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ap_top_terms %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
scale_y_reordered()
## document topic probabilities
ap_documents <- tidy(ap_lda, matrix = "gamma")
ap_documents
## distribution of speeches by topic
ggplot(data = ap_documents, aes(x = topic)) +
geom_bar(stat = 'dodge')
## distribution of speeches by topic
ggplot(data = ap_documents, aes( topic)) +
geom_bar()
## Apply lda
ap_lda <- LDA(dfm_ob, k = 10, control = list(seed = 1234))
ap_topics <- tidy(ap_lda, matrix = "beta")
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ap_top_terms %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
scale_y_reordered()
## document topic probabilities
ap_documents <- tidy(ap_lda, matrix = "gamma")
## distribution of speeches by topic
ggplot(data = ap_documents, aes( topic)) +
geom_bar()
## load topics-speeches
data_topics_docs <- read_csv("/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Congressional-dataMX/data/02-outcomes/01-policy_positioning/01-text_analysis/01-clean_data/topics/topics_speeches.csv") %>%
select(id_speech, clean_topic)
## tokenize data
toks <- tokens(x = data_topics_docs$clean_topic)
ngrams <- tokens_ngrams(toks, n = 1:2)
dfm_ob <- dfm(ngrams)
dfm_trim.temp <- dfm_trim(dfm_ob, docfreq_type = "prop",
min_docfreq = 0.005)
dfm_trim <- dfm_trim.temp[-which(rowMeans(dfm_trim.temp) == 0),]
data_topics_docs <- data_topics_docs[-which(rowMeans(dfm_trim.temp) == 0),]
dfm_ob <- dfm(ngrams)
## Apply lda
ap_lda <- LDA(dfm_ob, k = 10, control = list(seed = 1234))
ap_topics <- tidy(ap_lda, matrix = "beta")
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ap_top_terms %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
scale_y_reordered()
ap_top_terms %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
scale_y_reordered()
library(tidyverse)
library(tidyverse)
library(ggplot2 )
data <- read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv')
data
data <- read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv') %>%
sseselect(committee, meeting, id_question)) %>%
distinct()
data
data <- read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv') %>%
select(committee, meeting, id_question)) %>%
distinct()
read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv') %>%
select(committee, meeting, id_question))
library(tidyverse)
data <- read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv') %>%
select(committee, meeting, id_question) %>%
distinct()
read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv') %>%
select(committee, meeting, id_question)
read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv')
read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv') %>%
select(committee, meeting, id_question)
data <- read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv') %>%
select(committee, id_meeting, id_question) %>%
distinct()
data
ggplot(data = data, aes(x= committee)) +
geom_bar()
data <- read_csv('/Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Deliberation in the FDA/R_task2/data/02-votes/02-clean_votes/2.0-aggregated_clean/votes_fda.csv')
voting_sessions <- data %>%
select(committe, id_meeting) %>%
distinct() %>%
group_by(committe) %>%
count()
voting_sessions <- data %>%
select(committee, id_meeting) %>%
distinct() %>%
group_by(committe) %>%
count()
data
voting_sessions <- data %>%
select(committee, id_meeting) %>%
distinct() %>%
group_by(committee) %>%
count()
ggplot(voting_sessions, aes(x = reorder(committe, -n), y = n)) +
geom_bar(stat = "identity") +
theme_minimal()+
labs(x = 'Committee',
title = 'Number of voting-sessions by Committee') +
theme(axis.text.x = element_text(angle = 90))
ggplot(voting_sessions, aes(x = reorder(committee, -n), y = n)) +
geom_bar(stat = "identity") +
theme_minimal()+
labs(x = 'Committee',
title = 'Number of voting-sessions by Committee') +
theme(axis.text.x = element_text(angle = 90))
voting_questions <- data %>%
select(committee, id_question) %>%
distinct() %>%
group_by(committee) %>%
count()
voting_questions <- data %>%
select(committee, id_question) %>%
distinct() %>%
group_by(committee) %>%
count()
ggplot(voting_questions, aes(x = reorder(committee, -n), y = n)) +
geom_bar(stat = "identity") +
theme_minimal()+
labs(x = 'Committee',
title = 'Number of voting-questions by Committee') +
theme(axis.text.x = element_text(angle = 90))
ggplot(voting_sessions, aes(x = reorder(committee, -n), y = n)) +
geom_bar(stat = "identity") +
theme_minimal()+
labs(x = 'Committee',
title = 'Number of voting-sessions by Committee') +
theme(axis.text.x = element_text(angle = 90))
ggplot(voting_questions, aes(x = reorder(committee, -n), y = n)) +
geom_bar(stat = "identity") +
theme_minimal()+
labs(x = 'Committee',
title = 'Number of voting-questions by Committee') +
theme(axis.text.x = element_text(angle = 90))
voting_questions
voting_questions %>%
filter(n != 1)
more_than_one <- voting_questions %>%
filter(n != 1)
mean(more_than_one$n)
sd(more_than_one$n)
voting_questions
more_than_one <- voting_questions <- data %>%
select(id_meeting, id_question) %>%
distinct() %>%
group_by(committee) %>%
count()
mean(more_than_one$n)
sd(more_than_one$n)
more_than_one <- voting_questions <- data %>%
select(id_meeting, id_question) %>%
distinct() %>%
group_by(id_meeting) %>%
count()
mean(more_than_one$n)
sd(more_than_one$n)
sd(more_than_one$n)
max(more_than_one$n)
min(more_than_one$n)
more_than_one <- voting_questions <- data %>%
select(id_meeting, id_question) %>%
distinct() %>%
group_by(id_meeting) %>%
count() %>%
filter( n != 1)
mean(more_than_one$n)
sd(more_than_one$n)
max(more_than_one$n)
min(more_than_one$n)
length(more_than_one)
nrow(more_than_one)
rm(list=ls())
## Output directory
setwd(dir = 'cam.blanes Dropbox/Camila Blanes/Congressional-dataMX/')
output <- "~//Users/cblanesg/cam.blanes Dropbox/Camila Blanes/Congressional-dataMX/data/02-outcomes/01-policy_positioning/01-text_analysis/wordfish/03_ideal_wordfish/"
list.packages <- c("readr",
"tidybayes",
"readxl",
"plyr",
"dplyr",
"tidyr",
"stringr",
"xtable",
"ggplot2",
"RcppRoll",
"ggridges",
"rstan",
"shinystan",
"quanteda",
"quanteda.textmodels",
"austin",
'miceadds',
'corpustools')
lapply(list.packages,
require,
character.only = TRUE)
class_topics <- read_csv('wordfish/01_lda/class_topics.csv') %>%
select(id_speech,topic_lda)
legis_60 <- read_excel(paste0(input, 60, '_disaggregated.xlsx')) %>%
left_join(speeches, by = 'id_speech') %>%
select(-c(`...1`)) %>%
left_join(class_topics, by = 'id_speech')%>%
select(-c(text_speech, clean_speech))
## load re-labaled speeches
temp <- read_excel(paste0(input, 60, '_disaggregated.xlsx')) %>%
select(id_speech, clean_speech)
data_speech<- read_csv('wordfish/02_dataprep_wordfish/0-topics/topics60_legislatura3.csv') %>%
filter(clean_topic == 'health') %>%
left_join(temp, by = 'id_speech')
data_speech<- read_csv('data/02-outcomes/01-policy_positioning/01-text_analysis/wordfish/02_dataprep_wordfish/0-topics/topics60_legislatura3.csv') %>%
filter(clean_topic == 'health') %>%
left_join(temp, by = 'id_speech')
## load re-labaled speeches
temp <- read_excel(paste0(input, 60, '_disaggregated.xlsx')) %>%
select(id_speech, clean_speech)
input <- '01-clean_data/disaaggregated_data/legislatura'
## load re-labaled speeches
temp <- read_excel(paste0(input, 60, '_disaggregated.xlsx')) %>%
select(id_speech, clean_speech)
input <- 'data/02-outcomes/01-policy_positioning/01-text_analysis/01-clean_data/disaaggregated_data/legislatura'
## load re-labaled speeches
temp <- read_excel(paste0(input, 60, '_disaggregated.xlsx')) %>%
select(id_speech, clean_speech)
data_speech<- read_csv('data/02-outcomes/01-policy_positioning/01-text_analysis/wordfish/02_dataprep_wordfish/0-topics/topics60_legislatura3.csv') %>%
filter(clean_topic == 'health') %>%
left_join(temp, by = 'id_speech')
dfm_ob <- dfm(data_speech$clean_speech)
dfm_trim <- dfm_trim(dfm_ob, min_termfreq = 1, min_docfreq = 2)
dfm_trim@docvars$docname_ <- data_speech$id
dfm_trim@docvars$docid_ <- data_speech$id
wf_q <- textmodel_wordfish(dfm_trim, dir = c(28, 1))
wf_q$docs <- data_speech$id
#textplot_scale1d(wf_q, margin = "documents")
textplot_scale1d(wf_q, margin = "features")
wf_q
#textplot_scale1d(wf_q, margin = "documents")
textplot_scale1d(wf_q, margin = "features")
data_speech<- read_csv('data/02-outcomes/01-policy_positioning/01-text_analysis/wordfish/02_dataprep_wordfish/0-topics/topics60_legislatura3.csv') %>%
filter(clean_topic == 'fiscal policy') %>%
left_join(temp, by = 'id_speech')
dfm_ob <- dfm(data_speech$clean_speech)
dfm_trim <- dfm_trim(dfm_ob, min_termfreq = 1, min_docfreq = 2)
dfm_trim@docvars$docname_ <- data_speech$id
dfm_trim@docvars$docid_ <- data_speech$id
wf_q <- textmodel_wordfish(dfm_trim, dir = c(28, 1))
wf_q$docs <- data_speech$id
#textplot_scale1d(wf_q, margin = "documents")
textplot_scale1d(wf_q, margin = "features")
df <- as.data.frame(wf_q$features)
df$beta <- wf_q$beta
df
df %>% top_n(2)
df %>% top_n(20)
df %>% top_n(-20)
df %>% top_n(20)
df %>% top_n(-20)
df %>% top_n(20)
df %>% top_n(30)
data_speech<- read_csv('data/02-outcomes/01-policy_positioning/01-text_analysis/wordfish/02_dataprep_wordfish/0-topics/topics60_legislatura3.csv') %>%
filter(clean_topic == 'health') %>%
left_join(temp, by = 'id_speech')
dfm_ob <- dfm(data_speech$clean_speech)
dfm_trim <- dfm_trim(dfm_ob, min_termfreq = 1, min_docfreq = 2)
dfm_trim@docvars$docname_ <- data_speech$id
dfm_trim@docvars$docid_ <- data_speech$id
wf_q <- textmodel_wordfish(dfm_trim, dir = c(28, 1))
wf_q$docs <- data_speech$id
#textplot_scale1d(wf_q, margin = "documents")
textplot_scale1d(wf_q, margin = "features")
df_fiscal <- as.data.frame(wf_q$features)
df$beta <- wf_q$beta
df %>% top_n(30)
df %>% top_n(-20)
df_health <- as.data.frame(wf_q$features)
df <- as.data.frame(wf_q$features)
df$beta <- wf_q$beta
df %>% top_n(30)
df %>% top_n(-20)
df %>% top_n(30)
df %>% top_n(-20)
df %>% top_n(-30)
df %>% top_n(30)
read_csv('data/02-outcomes/01-policy_positioning/01-text_analysis/wordfish/02_dataprep_wordfish/0-topics/topics60_legislatura3.csv')
d<- read_csv('data/02-outcomes/01-policy_positioning/01-text_analysis/wordfish/02_dataprep_wordfish/0-topics/topics60_legislatura3.csv')
unique(d$clean_topic)
data_speech<- read_csv('data/02-outcomes/01-policy_positioning/01-text_analysis/wordfish/02_dataprep_wordfish/0-topics/topics60_legislatura3.csv') %>%
filter(clean_topic == "human rights") %>%
left_join(temp, by = 'id_speech')
dfm_ob <- dfm(data_speech$clean_speech)
dfm_trim <- dfm_trim(dfm_ob, min_termfreq = 1, min_docfreq = 2)
dfm_trim@docvars$docname_ <- data_speech$id
dfm_trim@docvars$docid_ <- data_speech$id
wf_q <- textmodel_wordfish(dfm_trim, dir = c(28, 1))
wf_q$docs <- data_speech$id
#textplot_scale1d(wf_q, margin = "documents")
textplot_scale1d(wf_q, margin = "features")
df <- as.data.frame(wf_q$features)
df$beta <- wf_q$beta
df %>% top_n(30)
df %>% top_n(-30)
